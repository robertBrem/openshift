apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  labels:
    app: backend
    version: todo
  name: backend
  namespace: myproject
  resourceVersion: todo
spec:
  replicas: 1
  selector:
    app: backend
    deploymentconfig: backend
    version: todo
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: backend
        deploymentconfig: backend
        version: todo
    spec:
      containers:
        - image: 172.30.1.1:5000/myproject/backend:todo
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /backend/resources/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: backend
          env:
          - name: VERSION
            value: "todo"
          - name: DB_HOST
            value: "database"
          - name: DB_PORT
            value: "5432"
          - name: WILDFLY_USER
            valueFrom:
              secretKeyRef:
                name: appserver
                key: user
          - name: WILDFLY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: appserver
                key: password
          - name: JNDI_NAME
            value: "java:jboss/jdbc/database"
          - name: DATASOURCE_NAME
            value: "Database"
          - name: DATABASE_NAME
            value: "database"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: database
                key: user
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database
                key: password
          ports:
            - containerPort: 8080
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /backend/resources/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  test: false
